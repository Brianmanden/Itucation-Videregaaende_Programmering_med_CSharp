@page "/documents/crud"
@inject HttpClient Http;
@inject NavigationManager Navigation
@using BushcraftBlog.Shared.Models;

<h2>List of Bushcraft Documents</h2>

@if (allDocuments == null)
{
    <p>Fetching documents</p>
}
else
{
    <h3>There are currently @allDocuments.Length Bushcraft Documents in the Blog</h3>

    int theId;
    string theName;

    @foreach (var doc in allDocuments)
    {
        theId = doc.DocumentId;
        theName = doc.Name;

        <div class="w-50 card bg-light text-black-50">
            <div class="card-body">
                <h5 class="card-title">@doc.Name</h5>
                <p class="card-text">@doc.Heading</p>

                <button class="btn btn-primary" @onclick="() => ModalDialog.Open(doc.DocumentId, doc.Name)">Delete Document: @theName</button>
            </div>
        </div>
        <ModalDialog @ref="@ModalDialog" />
    }
}

@code {

    private ModalDialog ModalDialog { get; set; }

    private Document[]? allDocuments;

    private void NavigateToSingleDocumentComponent(int DocumentId)
    {
        Navigation.NavigateTo($"documents/{DocumentId}");
    }

    private string[] SplitStrings(string joinedString)
    {
        return joinedString.Split(',', StringSplitOptions.RemoveEmptyEntries);
    }

    protected override async Task OnInitializedAsync()
    {
        allDocuments = await Http.GetFromJsonAsync<Document[]>("api/documents");
    }
}