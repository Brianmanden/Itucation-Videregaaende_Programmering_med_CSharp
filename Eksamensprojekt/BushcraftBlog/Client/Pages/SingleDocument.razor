@page "/documents/{DocumentId:int}"
@inject HttpClient Http;
@inject NavigationManager Navigation
@using BushcraftBlog.Shared.Models;

@if (document == null)
{
    <h3>Fetching document...</h3>
    <div class="spinner-border text-dark" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
else
{
    <div class="card bg-light bg-gradient bg-opacity-25 text-black-50">
        <div class="card-header">@document.Name</div>
        @if (document.DocumentImage != null)
        {
            <img class="card-img" src="./img/@document.DocumentImage">
        }
        <div class="card-body">
            <h5 class="card-title">@document.Heading</h5>
            <p class="card-text">@document.Content</p>
            <div class="card-text h-75">
                @if (SplitStrings(document.TopicStrings).Length > 0 || SplitStrings(document.TagStrings).Length > 0)
                {
                    <div class="d-flex align-items-end h-100">
                        @if (SplitStrings(document.TopicStrings).Length > 0)
                        {
                            <span class="d-flex align-items-end">
                                <b>Topics:</b>
                                @foreach (string topic in SplitStrings(document.TopicStrings))
                                {
                                    <a href="#" class="mx-1 btn btn-sm btn-outline-dark topicsTagsBtn">@topic</a>
                                }
                            </span>
                        }
                        @if (SplitStrings(document.TagStrings).Length > 0)
                        {
                            <span class="d-flex align-items-end">
                                <b>Tags:</b>
                                @foreach (string topic in SplitStrings(document.TagStrings))
                                {
                                    <a href="#" class="mx-1 btn btn-sm btn-outline-dark topicsTagsBtn">@topic</a>
                                }
                            </span>
                        }
                    </div>
                }
                @if (SplitStrings(document.ExternalSourcesStrings).Length > 0)
                {
                    <br />
                    <hr />

                    <b>Learn More:</b>
                    <span class="d-flex align-items-end">
                        @foreach (string externalRessource in SplitStrings(document.ExternalSourcesStrings))
                        {
                            <a class="mx-1 fs-6 btn btn-sm btn-outline-primary" href="@externalRessource" target="_blank">@externalRessource</a>
                        }
                    </span>
                }
            </div>
        </div>
    </div>
}


@code {
    private Document? document;

    [Parameter]
    public int DocumentId { get; set; }

    private void NavigateToSingleDocumentComponent(int DocumentId)
    {
        Navigation.NavigateTo($"documents/{DocumentId}");
    }

    private string[] SplitStrings(string joinedString)
    {
        return joinedString.Split(',', StringSplitOptions.RemoveEmptyEntries);
    }

    protected override async Task OnInitializedAsync()
    {
        document = await Http.GetFromJsonAsync<Document>($"api/Documents/{DocumentId}");
    }
}